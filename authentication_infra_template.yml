---
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Q business application authentication with Cognito setup cloudformation template

Parameters:
  CreateOIDCProvider:
    Description: set to true only if you don't have an IAM OIDC provider set
    Default: false
    Type: String
    AllowedValues: [true, false]
Conditions:
  ShouldCreateOIDCProvider:
    !Equals [true, !Ref CreateOIDCProvider]



Resources:
    QEvalCognitoUserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        AccountRecoverySetting:
          RecoveryMechanisms:
           - Name: verified_email
             Priority: 1
        AdminCreateUserConfig:
          AllowAdminCreateUserOnly: true
        AutoVerifiedAttributes: []
        EmailVerificationMessage: The verification code to your new account is {####}
        EmailVerificationSubject: Verify your new account
        Policies:
          PasswordPolicy:
            MinimumLength: 8
            RequireLowercase: true
            RequireNumbers: true
            RequireSymbols: true
            RequireUppercase: true
        SmsVerificationMessage: The verification code to your new account is {####}
        UserPoolName: qeval-authentication-user-pool
        UsernameAttributes:
          - email
        VerificationMessageTemplate:
          DefaultEmailOption: CONFIRM_WITH_CODE
          EmailMessage: The verification code to your new account is {####}
          EmailSubject: Verify your new account
          SmsMessage: The verification code to your new account is {####}


    QEvalCognitoUserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        AllowedOAuthFlows:
         - implicit
         - code
        AllowedOAuthFlowsUserPoolClient: true
        AllowedOAuthScopes:
         - profile
         - phone
         - email
         - openid
         - aws.cognito.signin.user.admin
        CallbackURLs:
         - https://example.com
        ClientName: user-pool-integration-test-app-client
        ExplicitAuthFlows:
         - ALLOW_USER_PASSWORD_AUTH
         - ALLOW_REFRESH_TOKEN_AUTH
        GenerateSecret: true
        SupportedIdentityProviders:
         - COGNITO
        UserPoolId: !Ref QEvalCognitoUserPool

    QEvalCognitoIdentityPool:
      Type: AWS::Cognito::IdentityPool
      Properties:
        AllowUnauthenticatedIdentities: false
        CognitoIdentityProviders:
          - ClientId: !Ref QEvalCognitoUserPoolClient
            ProviderName:
              Fn::GetAtt:
               - QEvalCognitoUserPool
               - ProviderName
        IdentityPoolName: qeval-authentication-identity-pool

    QEvalCognitoIdentityPoolPrincipalTag:
      Type: AWS::Cognito::IdentityPoolPrincipalTag
      Properties:
        IdentityPoolId: !Ref QEvalCognitoIdentityPool
        IdentityProviderName:
          Fn::GetAtt:
           - QEvalCognitoUserPool
           - ProviderName
        PrincipalTags:
          Email: email

    QEvalOIDCProvider:
        Type: AWS::IAM::OIDCProvider
        Condition: ShouldCreateOIDCProvider
        Properties:
          ClientIdList:
            - !Ref QEvalCognitoIdentityPool
          Url: "https://cognito-identity.amazonaws.com"

Outputs:
    UserPoolClientId:
      Value:
        Ref: QEvalCognitoUserPoolClient
      Export:
        Name: UserPoolClientId
    UserPoolId:
      Value:
        Ref: QEvalCognitoUserPool
      Export:
        Name: UserPoolId
    OIDCClientId:
      Value:
        Ref: QEvalCognitoIdentityPool
      Export:
        Name: OIDCClientId